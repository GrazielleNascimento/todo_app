<h1 class="text-2xl font-bold mb-4"><%= @project.title %></h1>

<div class="flex mb-4">
  <%= link_to projects_path, class: "btn btn-secondary mr-2" do %>
    <i class="fas fa-arrow-left mr-1"></i> Voltar
  <% end %>
  <%= link_to edit_project_path(@project), class: "btn btn-secondary" do %>
    <i class="fas fa-edit mr-1"></i> Editar
  <% end %>
</div>

<!-- Barra de progresso -->
<div class="bg-dark-light p-4 rounded-lg mb-6">
  <div class="flex justify-between text-sm mb-1">
    <span><%= @project.completed_tasks_count %> de <%= @project.total_tasks_count %> tarefas completas</span>
    <span><%= @project.completion_percentage %>%</span>
  </div>
  <div class="progress-bar">
    <div class="progress-fill" style="width: <%= @project.completion_percentage %>%"></div>
  </div>
</div>

<!-- Formulário para adicionar nova tarefa -->
<div class="bg-dark-light p-4 rounded-lg mb-6">
  <h2 class="text-xl font-semibold mb-4">Adicionar Nova Tarefa</h2>
  
  <%= form_with(model: [@project, @task]) do |form| %>
    <div class="form-group">
      <%= form.text_field :title, class: "form-control", placeholder: "Título da tarefa", required: true %>
    </div>
    
    <div class="form-group">
      <%= form.text_area :description, class: "form-control", placeholder: "Descrição (opcional)", rows: 3 %>
    </div>
    
    <%= form.submit "Adicionar Tarefa", class: "btn btn-primary" %>
  <% end %>
</div>

<!-- Lista de tarefas -->
<div class="bg-dark-light p-4 rounded-lg">
  <h2 class="text-xl font-semibold mb-4">Tarefas</h2>
  
  <!-- Filtros de tarefas -->
  <div class="filters mb-4">
    <button class="filter active" data-filter="all">Todas</button>
    <button class="filter" data-filter="pending">Pendentes</button>
    <button class="filter" data-filter="completed">Concluídas</button>
  </div>
  
  <div id="tasks-list">
    <% if @project.tasks.any? %>
      <% @project.tasks.each do |task| %>
        <div id="task-<%= task.id %>" class="task-item <%= task.completed? ? 'task-completed' : '' %>">
          <div class="flex items-center flex-grow">
           <% if task.persisted? %>
  <%= button_to toggle_status_task_path(task), method: :patch, remote: true, class: "flex items-center" do %>
    <span class="task-checkbox <%= task.completed? ? 'checked' : '' %>"></span>
  <% end %>
<% else %>
  <button class="flex items-center task-checkbox">
    <span class="task-checkbox <%= task.completed? ? 'checked' : '' %>"></span>
  </button>
<% end %>
            
            <div class="ml-2">
              <div class="task-title font-medium"><%= task.title %></div>
              <% if task.description.present? %>
                <div class="text-sm text-light-dark mt-1"><%= task.description %></div>
              <% end %>
              <div class="text-xs text-light-dark mt-1">
                Criada <%= time_ago_in_words(task.created_at) %> atrás
              </div>
            </div>
          </div>
          
          <div class="task-actions">
            <%= link_to edit_task_path(task), class: "task-action" do %>
              <i class="fas fa-edit"></i>
            <% end %>
            
            <%= button_to task_path(task), method: :delete, remote: true, 
                class: "task-action task-action-delete", 
                data: { turbo_confirm: "Tem certeza que deseja remover esta tarefa?" } do %>
              <i class="fas fa-trash"></i>
            <% end %>
          </div>
        </div>
      <% end %>
    <% else %>
      <div class="text-center py-6">
        <p>Este projeto ainda não tem tarefas. Adicione uma tarefa acima para começar!</p>
      </div>
    <% end %>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    // Inicializar filtros
    const filters = document.querySelectorAll('.filter');
    const tasks = document.querySelectorAll('.task-item');
    
    filters.forEach(filter => {
      filter.addEventListener('click', function() {
        // Atualizar classes ativas
        filters.forEach(f => f.classList.remove('active'));
        this.classList.add('active');
        
        const filterValue = this.dataset.filter;
        
        // Filtrar tarefas
        tasks.forEach(task => {
          if (filterValue === 'all') {
            task.style.display = 'flex';
          } else if (filterValue === 'pending' && !task.classList.contains('task-completed')) {
            task.style.display = 'flex';
          } else if (filterValue === 'completed' && task.classList.contains('task-completed')) {
            task.style.display = 'flex';
          } else {
            task.style.display = 'none';
          }
        });
      });
    });
  });
</script>